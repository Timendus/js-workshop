(()=>{"use strict";class e{constructor(e=!1){this.roomId=e||this._generateRoomId(),this.options=[{name:"Rock",icon:"fa-hand-rock",beats:"Scissors"},{name:"Paper",icon:"fa-hand-paper",beats:"Rock"},{name:"Scissors",icon:"fa-hand-scissors",beats:"Paper"}],this._socket=io("https://browserjam-event-server.herokuapp.com/rock-paper-scissors"),this._players={},this._choices={},this._scores={},this._events={},this._setupEventListeners(),this.resetScores()}addEventListener(e,t){this._events[e]??=[],this._events[e].push(t)}start(){this._socket.emit("join",{room:this.roomId})}resetScores(){this._scores={me:0,opponent:0},this._fireEvent("scoresChanged",{...this._scores})}choose(e){this._choices.me=e,this._socket.emit("message",e,{echo:!1}),this._checkChoices()}_generateRoomId(){return Math.random().toString(36).substring(2,15)+Math.random().toString(36).substring(2,15)}_setupEventListeners(){this._socket.on("join",(e=>{this._players[e.id]=e,this._fireEvent("numPlayersChanged",Object.keys(this._players).length)})),this._socket.on("leave",(e=>{delete this._players[e.id],this._fireEvent("numPlayersChanged",Object.keys(this._players).length)})),this._socket.on("message",((e,t)=>{e&&!this._choices.opponent&&this._fireEvent("opponentChose"),this._choices.opponent=e,this._checkChoices()})),this._socket.on("disconnect",(()=>this._fireEvent("socketDisconnect")))}_fireEvent(e,t){const s=this._events[e];s&&s.forEach((e=>e(t)))}_checkChoices(){this._choices.me&&this._choices.opponent&&(this._choices.me.beats==this._choices.opponent.name?(this._lastResult="WIN",this._scores.me++):this._choices.opponent.beats==this._choices.me.name?(this._lastResult="LOSE",this._scores.opponent++):this._lastResult="TIE",this._fireEvent("scoresChanged",{...this._scores}),this._fireEvent("gameEnd",{choices:{...this._choices},result:this._lastResult}),this._choices={})}}document.addEventListener("DOMContentLoaded",(()=>{const t=document.querySelector("section"),s=document.querySelector("#user_choice"),n=document.querySelector("#comp_choice"),o=document.querySelector("#result"),i=document.querySelector("#waiting-message"),c=new e(window.location.hash?.substr(1));c.addEventListener("numPlayersChanged",(e=>{2==e?(document.querySelector("#waiting-room").classList.remove("active"),document.querySelector("main").classList.add("active"),c.resetScores()):(document.querySelector("#num-players").innerText=e,document.querySelector("#waiting-room").classList.add("active"),document.querySelector("main").classList.remove("active"))})),c.addEventListener("socketDisconnect",(()=>{alert("Connection lost. Reloading the page..."),window.location.reload()})),c.addEventListener("opponentChose",(()=>{i.innerText="Opponent is waiting for you..."})),c.addEventListener("scoresChanged",(e=>{document.getElementById("opponent_score").innerHTML=e.opponent,document.getElementById("user_score").innerHTML=e.me})),c.addEventListener("gameEnd",(e=>{switch(e.result){case"WIN":o.innerHTML="You Win!",o.classList.add("win"),document.body.style.background="linear-gradient(135deg, #1ba0ff, #1bffb5)";break;case"LOSE":o.innerHTML="Opponent Wins!",o.classList.add("lose"),document.body.style.background="linear-gradient(135deg, #ff1b99, #ffa41b)";break;case"TIE":o.innerHTML="You tied!",o.classList.add("tie"),document.body.style.background="linear-gradient(135deg, #ffcf1b, #ff8b1b)"}i.innerText="Make a choice!",n.innerHTML=`Opponent chose <span>${e.choices.opponent.name.toUpperCase()}</span>`})),t.addEventListener("click",(e=>{const t=c.options.find((t=>t.name==e.target.id));t&&(i.innerText="Waiting for your opponent...",s.innerHTML=`You choose <span>${t.name.toUpperCase()}</span>`,n.innerHTML="",o.innerHTML="",o.classList=[],c.choose(t))})),c.options.forEach((e=>{const s=document.createElement("button");s.id=e.name,s.classList.add("far"),s.classList.add(e.icon),t.appendChild(s)}));const r=window.location.href.split("#")[0]+"#"+c.roomId;document.querySelector("#invite-link").innerHTML=`<a href="${r}">${r}</a>`,c.start()}))})();